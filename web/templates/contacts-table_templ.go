// Code generated by templ@v0.2.364 DO NOT EDIT.

package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/pmwals09/yobs/internal/models/contact"

func ContactsTable(contacts []contact.Contact) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<table class=\"table-auto border-collapse w-full mb-4\" id=\"contact-table\"><thead><tr><th class=\"border-b text-left\">")
		if err != nil {
			return err
		}
		var_2 := `Name`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th class=\"border-b text-left\">")
		if err != nil {
			return err
		}
		var_3 := `Company`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th class=\"border-b text-left\">")
		if err != nil {
			return err
		}
		var_4 := `Title`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th class=\"border-b text-left\">")
		if err != nil {
			return err
		}
		var_5 := `Phone`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th><th class=\"border-b text-left\">")
		if err != nil {
			return err
		}
		var_6 := `Email`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</th></tr></thead><tbody>")
		if err != nil {
			return err
		}
		for _, contact := range contacts {
			_, err = templBuffer.WriteString("<tr><td class=\"border-b\">")
			if err != nil {
				return err
			}
			var var_7 string = contact.Name
			_, err = templBuffer.WriteString(templ.EscapeString(var_7))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</td><td class=\"border-b\">")
			if err != nil {
				return err
			}
			var var_8 string = contact.CompanyName
			_, err = templBuffer.WriteString(templ.EscapeString(var_8))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</td><td class=\"border-b\">")
			if err != nil {
				return err
			}
			var var_9 string = contact.Title
			_, err = templBuffer.WriteString(templ.EscapeString(var_9))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</td><td class=\"border-b\">")
			if err != nil {
				return err
			}
			var var_10 string = contact.Phone
			_, err = templBuffer.WriteString(templ.EscapeString(var_10))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</td><td class=\"border-b\">")
			if err != nil {
				return err
			}
			var var_11 string = contact.Email
			_, err = templBuffer.WriteString(templ.EscapeString(var_11))
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</td></tr>")
			if err != nil {
				return err
			}
		}
		_, err = templBuffer.WriteString("</tbody></table>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
