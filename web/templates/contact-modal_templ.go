// Code generated by templ@v0.2.364 DO NOT EDIT.

package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import "github.com/pmwals09/yobs/internal/models/opportunity"

// TODO: Add a button to close the modal
// TODO: Write the creation endpoint

func ContactModal(oppty *opportunity.Opportunity) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, err = templBuffer.WriteString("<div class=\"relative z-10\"><div class=\"fixed inset-0 bg-gray-500 bg-opacity-75\"></div><div class=\"fixed inset-0 z-10 w-screen overflow-y-auto\" id=\"contact-modal-background\"><div class=\"flex min-h-full items-end justify-center p-4 text-center sm:items-center sm:p-0\"><div class=\"relative transform overflow-hidden rounded-lg bg-white text-left shadow-xl transition-all sm:my-8 sm:w-full sm:max-w-lg\"><div class=\"bg-white px-4 pb-4 pt-5 sm:p-6 sm:pb-4\"><h2 class=\"text-[1.5em] mb-4\">")
		if err != nil {
			return err
		}
		var_2 := `Add a Contact`
		_, err = templBuffer.WriteString(var_2)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</h2><form method=\"POST\" action=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(insertIDIntoString("/opportunities/{}/new-contact", oppty.ID)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" hx-post=\"")
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString(templ.EscapeString(insertIDIntoString("/opportunities/{}/new-contact", oppty.ID)))
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("\" hx-target=\"\"><section class=\"grid grid-cols-2 gap-y-2\"><label for=\"contact-name\">")
		if err != nil {
			return err
		}
		var_3 := `Name`
		_, err = templBuffer.WriteString(var_3)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</label><input type=\"text\" name=\"contact-name\" value=\"\"><label for=\"company-name\">")
		if err != nil {
			return err
		}
		var_4 := `Company Name`
		_, err = templBuffer.WriteString(var_4)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</label><input type=\"text\" name=\"company-name\" value=\"\"><label for=\"contact-title\">")
		if err != nil {
			return err
		}
		var_5 := `Title`
		_, err = templBuffer.WriteString(var_5)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</label><input type=\"text\" name=\"contact-title\" value=\"\"><label for=\"contact-phone\">")
		if err != nil {
			return err
		}
		var_6 := `Phone`
		_, err = templBuffer.WriteString(var_6)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</label><input type=\"text\" name=\"contact-phone\" value=\"\"><label for=\"contact-email\">")
		if err != nil {
			return err
		}
		var_7 := `Email`
		_, err = templBuffer.WriteString(var_7)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</label><input type=\"text\" name=\"contact-email\" value=\"\"></section><input type=\"submit\" name=\"contact-submit\" value=\"Create Contact\" class=\"bg-gray-400 px-4 py-2 rounded-full mx-auto block hover:cursor-pointer my-3\"></form></div></div></div></div></div><script type=\"text/javascript\" defer>")
		if err != nil {
			return err
		}
		var_8 := `
	(() => {
		const bg = document.querySelector("#contact-modal-background")
		bg.addEventListener("click", handleClose)
		function handleClose(e) {
			bg.removeEventListener("click", handleClose)
			const container = document.querySelector("#contact-modal")
			container.innerHTML = ""
		}
	})()
`
		_, err = templBuffer.WriteString(var_8)
		if err != nil {
			return err
		}
		_, err = templBuffer.WriteString("</script>")
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
