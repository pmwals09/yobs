// Code generated by templ@v0.2.364 DO NOT EDIT.

package templates

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import "context"
import "io"
import "bytes"

import (
	"github.com/pmwals09/yobs/internal/models/user"
)

func IndexPage(user *user.User) templ.Component {
	return templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
		templBuffer, templIsBuffer := w.(*bytes.Buffer)
		if !templIsBuffer {
			templBuffer = templ.GetBuffer()
			defer templ.ReleaseBuffer(templBuffer)
		}
		ctx = templ.InitializeContext(ctx)
		var_1 := templ.GetChildren(ctx)
		if var_1 == nil {
			var_1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		var_2 := templ.ComponentFunc(func(ctx context.Context, w io.Writer) (err error) {
			templBuffer, templIsBuffer := w.(*bytes.Buffer)
			if !templIsBuffer {
				templBuffer = templ.GetBuffer()
				defer templ.ReleaseBuffer(templBuffer)
			}
			_, err = templBuffer.WriteString("<h1 class=\"text-center text-[2em]\">")
			if err != nil {
				return err
			}
			var_3 := `Always look ahead`
			_, err = templBuffer.WriteString(var_3)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h1> <section class=\"mb-4\"><h2 class=\"text-[1.5em] mb-2\">")
			if err != nil {
				return err
			}
			var_4 := `We put the Applicant in ATS`
			_, err = templBuffer.WriteString(var_4)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</h2><p class=\"mb-1\">")
			if err != nil {
				return err
			}
			var_5 := `Big businesses have Applicant Tracking Systems that turn you and your application into just another number.`
			_, err = templBuffer.WriteString(var_5)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p><p class=\"mb-1\">")
			if err != nil {
				return err
			}
			var_6 := `We turn that around to make an Opportunity Tracking System.`
			_, err = templBuffer.WriteString(var_6)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p><p class=\"mb-1\">")
			if err != nil {
				return err
			}
			var_7 := `Keep track of positions you're interested in, your correspondence about it, and the statuses of your applications.`
			_, err = templBuffer.WriteString(var_7)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</p></section> <section class=\"mb-4 flex justify-center gap-4\"><a href=\"/login\" class=\"px-4 py-2 font-semibold text-sm bg-gray-500 text-white rounded-full\">")
			if err != nil {
				return err
			}
			var_8 := `Log In`
			_, err = templBuffer.WriteString(var_8)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</a><a href=\"/sign-up\" class=\"px-4 py-2 font-semibold text-sm bg-gray-500 text-white rounded-full\">")
			if err != nil {
				return err
			}
			var_9 := `Sign Up`
			_, err = templBuffer.WriteString(var_9)
			if err != nil {
				return err
			}
			_, err = templBuffer.WriteString("</a></section>")
			if err != nil {
				return err
			}
			if !templIsBuffer {
				_, err = io.Copy(w, templBuffer)
			}
			return err
		})
		err = base(user).Render(templ.WithChildren(ctx, var_2), templBuffer)
		if err != nil {
			return err
		}
		if !templIsBuffer {
			_, err = templBuffer.WriteTo(w)
		}
		return err
	})
}
